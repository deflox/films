<!DOCTYPE html>
<html>
<head>

    <!-- Meta -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>Filmlist</title>

    <!-- CSS -->
    <link rel="stylesheet" href="assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="assets/css/app.css">

    <!-- Fonts -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,900,700,400italic,600">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">

</head>
<body>

<div class="container">
    <h1>Filmlist
        {% if session['user'] is null %}
            <button class="btn btn-primary pull-right btn-top" id="login">Login</button>
        {% else %}
            <a href="{{ path_for('api.logout') }}">
                <button class="btn btn-primary pull-right btn-top" style="margin-left: 5px;">Logout</button>
            </a>
            <button class="btn btn-primary pull-right btn-top" id="add">Add Item</button>
        {% endif %}
    </h1>
    <p>Personal list containing all films I've ever watched.</p>
    <p>I totally spend <strong>1 month, 28 days, 23 hours and 29 minutes</strong> watching all films listed here... What I'm doing with my life?</p>
    <h2>Filter and Sort:</h2>
    <div class="form-group">
        <label for="search">Search:</label>
        <input type="text" id="search" class="form-control" placeholder="Search by movie name ...">
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label for="genre">Genre:</label><br>
                <select class="form-control" name="genre" id="genre">
                    <option value="">No filter</option>
                    <option value="drama">Drama</option>
                    <option value="action">Action</option>
                    <option value="thriller">Thriller</option>
                </select>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label for="type">Type:</label>
                <select class="form-control" name="type" id="type">
                    <option value="">No filter</option>
                    <option value="">Movie</option>
                    <option value="">Series</option>
                </select>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label for="sort">Sort after:</label>
                <select class="form-control" name="sort" id="sort">
                    <option value="">No sorting</option>
                    <option value="">Year: newest first</option>
                    <option value="">Year: newest last</option>
                    <option value="">Runtime: longest first</option>
                    <option value="">Runtime: longest last</option>
                    <option value="">IMDb Rating: best first</option>
                    <option value="">IMDb Rating: best last</option>
                </select>
            </div>
        </div>
    </div>

    <div id="film-list">
        {% if (movies is not empty) %}
            {% for movie in movies %}
            <div class="film" data-id="{{ movie.id }}">
                <img src="{{ movie.image_url is empty ? "assets/images/uploads/#{movie.imdb_id}.jpg" : movie.image_url }}" alt="{{ movie.title }}">
            </div>
            {% endfor %}
        {% else %}
            <p>No movies yet. Add a movie with the <strong>Add item</strong> button.</p>
        {% endif %}
    </div>

</div>

<div id="loading"></div>

<div id="ohsnap"></div>

<!-- JavaScript -->
<script src="assets/js/jquery.min.js"></script>
<script src="assets/js/bootstrap.min.js"></script>
<script src="assets/js/bootbox.min.js"></script>
<script src="assets/js/validate.min.js"></script>
<script src="assets/js/ohsnap.min.js"></script>
<script>

    function writeErrorsInForm() {

    }

    $(document).on("click", ".film", function(e) {

        var response;
        var image_url = "";
        var genres = "";
        var actors = "";

        var id = $(this).attr("data-id");

        $("#loading").css("display", "block");

        $.ajax({
            type: "POST",
            dataType: "json",
            async: false,
            url: "{{ path_for('api.get.item') }}",
            cache: false,
            data: {
                id: id
            },
            success: function(data) {
                response = data;
            },
            complete: function() {
                $("#loading").css("display", "none");
            }
        });

        // Actors
        for (var i=0; i < response.actors.length; i++) {
            actors = actors + " " + response.actors[i].name + ",";
        }

        // Genres
        for (var z=0; z < response.genres.length; z++) {
            genres = genres + " " + response.genres[z].name + ",";
        }

        // Image path
        if (response.movie.image_url == "") {
            image_url = "assets/images/uploads/" + response.movie.imdb_id + ".jpg";
        } else {
            image_url = response.movie.image_url;
        }

        // IMDb rating
        var htmlIMDbRating = "";
        for (var i=0; i < Math.floor(parseFloat(response.movie.imdb_rating)); i++) {
            htmlIMDbRating += '<i class="fa fa-star" aria-hidden="true"></i>';
        }
        htmlIMDbRating += " (" + response.movie.imdb_rating + ")";

        // Personal rating
        var htmlPersonalRating = "";
        if (response.movie.personal_rating > 0) {
            for (var i=0; i < Math.floor(parseFloat(response.movie.personal_rating)); i++) {
                htmlPersonalRating += '<i class="fa fa-star" aria-hidden="true"></i>';
            }
            htmlPersonalRating += " (" + response.movie.personal_rating + ")";
        } else {
            htmlPersonalRating = "--";
        }

        bootbox.dialog({
            title: "" + response.movie.title + " (" + response.movie.year + ")",
            message: '' +
            '<div class="row dialog">' +
                '<div class="col-md-4">'+
                    '<img src="'+ image_url +'" alt="' + response.movie.title + '">'+
                '</div>'+
                '<div class="col-md-8">'+
                    '<i>' + genres.slice(0, -1) + ' (' + response.movie.runtime + ' min)</i>'+
                    '<h3>Plot:</h3>'+
                    '<p>' + response.movie.plot + '</p>'+
                    '<p>IMDb rating: ' + htmlIMDbRating + '<br>'+
                    'Personal rating: ' + htmlPersonalRating + '</p>'+
                    '<p>Actors: ' + actors.slice(0, -1) + '</p>'+
                '</div>'+
            '</div>',
            buttons: {
                danger: {
                    label: "Delete",
                    className: "btn-danger",
                    callback: function() {
                        bootbox.confirm("<h3>Are you sure?</h3>", function(result) {
                            if (result) {
                                // delete
                                bootbox.hideAll();
                            }
                        });
                        return false;
                    }
                },
                success: {
                    label: "Manage views",
                    className: "btn-success",
                    callback: function() {

                        $.ajax({
                            type: "GET",
                            dataType: "json",
                            cache: false,
                            url: "api/views/movie/" + response.movie.id,
                            success: function(data) {

                                var htmlMovieViews = '<p style="font-size: 15px; ">With this tool you can track the dates you watched this movie.</p><div id="movie-views">';

                                if (data.length != 0) {
                                    for (var i=0; i < data.length; i++) {
                                        htmlMovieViews += '' +
                                        '<div class="row">' +
                                            '<div class="col-md-10">' +
                                                '<input type="text" value="' + data[i].view_date + '" readonly="readonly" class="form-control view-input views-positive-margin">' +
                                            '</div>' +
                                            '<div class="col-md-2 text-right views-positive-margin">' +
                                                '<button class="btn btn-danger" data-id="' + data[i].id + '">' +
                                                    '<i class="fa fa-trash" aria-hidden="true"></i>' +
                                                '</button>' +
                                            '</div>' +
                                        '</div>';
                                    }
                                } else {
                                    htmlMovieViews += "There are no views registered for this movie.";
                                }

                                htmlMovieViews += '</div><div class="clearfix"><button class="btn btn-success pull-right" id="add-movie-view" data-id="' + response.movie.id + '">Add view</button></div>';

                                bootbox.dialog({
                                    title: "Manages views for <strong>" + response.movie.title + "</strong>",
                                    message: htmlMovieViews
                                });
                            }
                        });

                        return false;
                    }
                }
            }
        });

    });

    $(document).on("click", "#add-movie-view", function(e) {

        bootbox.dialog({
            title: "Add view date",
            message: '' +
            '<div class="form-group">'+
                '<label for="viewDate">View date:</label>'+
                '<input type="text" class="form-control" id="viewDate" placeholder="DD/MM/YYYY">'+
                '<span class="form-input-error"></span>'+
            '</div>'+
            '<div class="clearfix">'+
                '<button class="btn btn-success pull-right" data-id="' + $(this).attr('data-id') + '" id="add-movie-view-action">Add</button>'+
            '</div>'
        });

    });

    $(document).on("click", "#add-movie-view-action", function(e) {

        $.ajax({
            type: "POST",
            dataType: "json",
            url: "{{ path_for('api.views.add') }}",
            cache: false,
            data: {
                movie_id: $(this).attr('data-id'),
                viewDate: $("#viewDate").val()
            },
            success: function(data) {
                // asdf
                console.log(data);
            }
        });

    });

    $(document).on("click", "#fetch", function(e) {

        var button = $("#fetch");

        button.prop('disabled', true);
        button.html('<i class="fa fa-refresh fa-spin"></i>');

        $.ajax({
            dataType: "json",
            url: "http://www.omdbapi.com/?i=" + $("#imdb_id").val() +"&?plot=short",
            cache: false,
            success: function(data) {

                if (data.Response) {

                    $("#imdb_id").parent().removeClass("has-error");

                    $("#title").val(data.Title);
                    $("#year").val(data.Year);
                    $("#runtime").val(data.Runtime.slice(0, -4));
                    $("#genres").val(data.Genre);
                    $("#actors").val(data.Actors);
                    $("#imdb_rating").val(data.imdbRating);
                    $("#image_url").val(data.Poster);
                    $("#plot").html(data.Plot);

                } else {
                    $("#imdb_id").parent().addClass("has-error");
                }

            },
            complete: function() {
                button.prop('disabled', false);
                button.html('Fetch data');
            }
        });

    });

    $(document).on("click", "#add", function(e) {
        bootbox.dialog({
            title: "Add Item",
            message: ''+
            '<form>'+
                '<div id="form-global-error"></div>'+
                '<div class="input-group form-group">'+
                    '<label for="imdb_id" class="sr-only">IMDb Id: *</label>'+
                    '<input type="text" id="imdb_id" class="form-control" placeholder="Enter IMDb Id to fetch data...">'+
                    '<span class="input-group-btn">'+
                        '<button class="btn btn-default" type="button" id="fetch">Fetch data</button>'+
                    '</span>'+
                '</div>'+
                '<div class="form-field-error" id="form-field-error-imdb-id"></div>'+
                '<div class="form-group">'+
                    '<label for="title_foreign_language">Title in foreign language (if necessary):</label>'+
                    '<input type="text" id="title_foreign_language" class="form-control">'+
                    '<div class="form-field-error"></div>'+
                '</div>'+
                '<div class="form-group">'+
                    '<label for="title">Title: *</label>'+
                    '<input type="text" id="title" class="form-control">'+
                    '<div class="form-field-error"></div>'+
                '</div>'+
                '<div class="row">'+
                    '<div class="col-md-4">'+
                        '<div class="form-group">'+
                            '<label for="year">Year: *</label>'+
                            '<input type="text" id="year" class="form-control">'+
                            '<div class="form-field-error"></div>'+
                        '</div>'+
                    '</div>'+
                    '<div class="col-md-4">'+
                        '<div class="form-group">'+
                            '<label for="runtime">Runtime (min): *</label>'+
                            '<input type="text" id="runtime" class="form-control">'+
                            '<div class="form-field-error"></div>'+
                        '</div>'+
                    '</div>'+
                    '<div class="col-md-4">'+
                        '<div class="form-group">'+
                            '<label for="movieViewDate">First view date:</label>'+
                            '<input type="text" id="movieViewDate" class="form-control" placeholder="DD/MM/YYYY">'+
                            '<div class="form-field-error"></div>'+
                        '</div>'+
                    '</div>'+
                '</div>'+
                '<div class="form-group">'+
                    '<label for="genres">Genres (separated by comma): *</label>'+
                    '<input type="text" id="genres" class="form-control">'+
                    '<div class="form-field-error"></div>'+
                '</div>'+
                '<div class="form-group">'+
                    '<label for="actors">Actors (separated by commma): *</label>'+
                    '<input type="text" id="actors" class="form-control">'+
                    '<div class="form-field-error"></div>'+
                '</div>'+
                '<div class="row">'+
                    '<div class="col-md-6">'+
                        '<div class="form-group">'+
                            '<label for="imdb_rating">IMDb rating: *</label>'+
                            '<input type="text" id="imdb_rating" class="form-control">'+
                            '<div class="form-field-error"></div>'+
                        '</div>'+
                    '</div>'+
                    '<div class="col-md-6">'+
                        '<div class="form-group">'+
                            '<label for="personal_rating">Personal rating:</label>'+
                            '<input type="text" id="personal_rating" class="form-control">'+
                            '<div class="form-field-error"></div>'+
                        '</div>'+
                    '</div>'+
                '</div>'+
                '<div class="form-group">'+
                    '<label for="plot">Plot: *</label>'+
                    '<textarea id="plot" class="form-control"></textarea>'+
                    '<div class="form-field-error"></div>'+
                '</div>'+
                '<input type="hidden" id="image_url">'+
            '</form>',
            buttons: {
                success: {
                    label: "Add item",
                    className: "btn-success",
                    callback: function() {

                        var response;

                        var globalErrorContainer = $("#form-global-error");
                        var imdbIdError = $("#form-field-error-imdb-id");
                        var button = $(".btn-success");

                        button.html('<i class="fa fa-refresh fa-spin"></i>');
                        button.prop('disabled', true);

                        var fields = ["imdb_id","title_foreign_language","title", "year","movieViewDate","runtime","genres","actors","imdb_rating","personal_rating","plot"];

                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            async: false,
                            url: "{{ path_for('api.add.item') }}",
                            cache: false,
                            data: {
                                imdb_id: $("#imdb_id").val(),
                                title_foreign_language: $("#title_foreign_language").val(),
                                title: $("#title").val(),
                                year: $("#year").val(),
                                runtime: $("#runtime").val(),
                                movieViewDate: $("#movieViewDate").val(),
                                genres: $("#genres").val(),
                                actors: $("#actors").val(),
                                imdb_rating: $("#imdb_rating").val(),
                                personal_rating: $("#personal_rating").val(),
                                image_url: $("#image_url").val(),
                                plot: $("#plot").val()
                            },
                            success: function(data) {
                                response = data;
                            },
                            complete: function() {
                                button.prop('disabled', false);
                                button.html('Add item');
                            }
                        });

                        if (response.error) {

                            for (var i=0; i < fields.length; i++) {
                                if (fields[i] == "imdb_id") {
                                    if ("imdb_id" in response.error_messages) {
                                        imdbIdError.addClass("form-field-error-imdb-id");
                                        imdbIdError.html(response.error_messages["imdb_id"][0]);
                                    } else {
                                        imdbIdError.html("");
                                        imdbIdError.removeClass("form-field-error-imdb-id");
                                    }
                                } else {
                                    if (fields[i] in response.error_messages) {
                                        $("#"+fields[i]).parent().find(".form-field-error").html(response.error_messages[fields[i]][0]);
                                    } else {
                                        $("#"+fields[i]).parent().find(".form-field-error").html("");
                                    }
                                }
                            }

                            if ("global" in response.error_messages) {
                                globalErrorContainer.addClass("alert alert-danger");
                                globalErrorContainer.html(response.error_messages["global"][0]);
                            } else {
                                globalErrorContainer.removeClass("alert alert-danger");
                                globalErrorContainer.html("");
                            }

                            return false;

                        } else {

                            ohSnap('Added successfully!', {color: 'green'});
                            return true;

                        }

                    }
                }
            }
        });
    });

    $(document).on("click", "#login", function(e) {
        bootbox.dialog({
            title: "Login",
            message: ''+
            '<form>'+
                '<div class="form-group">'+
                    '<label for="username">Username:</label>'+
                    '<input type="text" class="form-control" id="username">'+
                    '<span class="form-field-error"></span>'+
                '</div>'+
                '<div class="form-group">'+
                    '<label for="password">Password:</label>'+
                    '<input type="password" class="form-control" id="password">'+
                    '<span class="form-field-error"></span>'+
                '</div>'+
            '</form>',
            buttons: {
                success: {
                    label: "Login",
                    className: "btn-success",
                    callback: function() {

                        var response;

                        var button = $(".btn-success");

                        button.html('<i class="fa fa-refresh fa-spin"></i>');
                        button.prop('disabled', true);

                        $.ajax({
                            type: "POST",
                            dataType: "json",
                            async: false,
                            url: "{{ path_for('api.login') }}",
                            cache: false,
                            data: {
                                username: $("#username").val(),
                                password: $("#password").val()
                            },
                            success: function(data) {
                                response = data;
                            },
                            complete: function() {
                                button.prop('disabled', false);
                                button.html('Login');
                            }
                        });

                        if (response.error) {
                            $("#username").parent().find(".form-error").html(response.error_messages[0]);
                            return false;
                        } else {
                            window.location.replace("{{ path_for('home') }}");
                            return true;
                        }

                    }
                }
            }
        });
    });
</script>

</body>
</html>